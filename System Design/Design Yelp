Yelp Design

What is Yelp?
- Yelp is a platform that helps people discover and connect with local businesses. Users can find businesses, read reviews, make reservations, schedule appointments, and even purchase products. It's like a one-stop-shop for local business interactions. Users can also upload photos and videos related to these places. 

Functional Requirements:
1. Business Profile: Yelp allows business owners or customers to create pages for businesses.
2. Search by Location: Users can search for attractions by location or GPS coordinates. They can also search for nearby places.
3. Reviews and Ratings: Users can leave reviews and ratings (in stars out of 5) for places they've visited or services they've used.
4. Photo and Video Upload: Users can upload photos and videos related to a place.

Non-Functional Requirements:
- High Availability: Yelp's search service should be highly available.
- Scalability: The system should handle peak demands during holiday seasons or at tourist attractions.
- Low Latency: Users should access information quickly.

Data Estimations:
- Storing data for 500M places with a 20% yearly growth.
- 1MB (excluding media) for metadata related to a location.
- Read-heavy system with a 1:1000 write to read ratio and up to 100k concurrent users at peak.

Database Schema:
- Primary entities include users, media, reviews, locations, and attractions tables.
- Various one-to-many relationships, e.g., users to reviews and attractions to reviews.

APIs:
- REST APIs for searching nearby places, adding/modifying listings, reviews, ratings, and media upload.
- APIs include parameters like search term, search criteria, and API key.

High-Level Design:

- Yelp's core feature is finding nearby places with minimal latency.
- Geohash, a geospatial indexing system, is used to represent locations with a 12-character code.
- To find nearby places, geohashes of user locations and places are compared.
- Data can be stored and indexed using NoSQL databases like Redis, Elasticsearch, or MongoDB, which offer geospatial features.

Data Partitioning:
- If using custom partitioning, data can be divided based on regions or consistent hashing to ensure even distribution.

Additional Features:
- Image and video processing to enhance media.
- Spam detection using machine learning models.
- Caching with Memcache or Redis for improved performance, especially for frequently searched places.

Yelp's system design focuses on efficient searching of nearby places and user-generated content while addressing high availability, scalability, and low latency. Geohash and NoSQL databases play vital roles in achieving these goals. Caching and machine learning enhance performance and data quality.